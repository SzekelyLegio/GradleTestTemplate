plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "hu.adikaindustries.gradletestproject"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    flavorDimensions "paidMode","minSdk"
    productFlavors{
        free{
            dimension "paidMode"
            applicationIdSuffix ".free"
        }
        paid{
            dimension "paidMode"
            applicationIdSuffix ".paid"
        }
        minSdk30{
            dimension "minSdk"
            minSdk 30
        }
        minSdk21{
            dimension "minSdk"
            minSdk 21
        }
    }
    
    
    //wich stage is the app development in
    buildTypes {
        release {
            minifyEnabled false
            //it makes reverse engineering hard
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta{
            applicationIdSuffix ".beta"
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

task helloWorld(){
10.times{i ->
    tasks.register("task$i"){
        doLast {
            println "Hello from task $i"
            }
        }
    }
    tasks.named("task1"){
           dependsOn "task4","task6","task8"
    }
    dependsOn "task1"
}

task copyApk(type: Copy , dependsOn:"test"){
    def sourceDest = layout.buildDirectory.dir("outputs/apk/freeMinSdk30/debug/app-free-minSdk30-debug.apk")
    def dirDest = "$rootDir/apk"
    from sourceDest
    into dirDest
    rename "app-free-minSdk30-debug.apk","gradle-test.apk"
    doLast {
        def file = new File(dirDest , "gradle-test.apk")
        ant.checksum file:file.path
    }
}

tasks.whenTaskAdded {task->
    if(task.name == "assembleDebug"){
        task.finalizedBy "copyApk"
    }
}